package hj;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.jdbc.core.RowMapper;
import org.springframework.stereotype.Component;
import org.springframework.transaction.annotation.Transactional;

import javax.annotation.PostConstruct;
import javax.persistence.EntityManager;
import javax.persistence.PersistenceContext;
import javax.persistence.Query;
import javax.sql.DataSource;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.List;

/**
 * Created by heiko on 14.01.15.
 */
@Component
public class DBSetup {

    @Autowired
    DataSource dataSource;

    @Transactional
    public void init() {


        JdbcTemplate jdbc = new JdbcTemplate(dataSource);

        jdbc.execute ("CREATE sequence hibernate_sequence");

        jdbc.execute ("CREATE TABLE Country(id integer GENERATED BY DEFAULT AS SEQUENCE hibernate_sequence primary key, version integer default 0,name varchar(30), code varchar(2))");

        jdbc.execute(" create table country_history(id integer primary key, version integer default 0,name varchar(30), code varchar(2), country_id integer, history_type varchar(30))");



        jdbc.execute("CREATE TRIGGER HISTORY_UPDATE AFTER UPDATE  ON country \n" +
                "   referencing OLD ROW AS oldrow for each row\n" +
                "    INSERT INTO country_history (id,country_id,version,code,name,history_type) values(next value for hibernate_sequence,oldrow.id,oldrow.version,oldrow.code, oldrow.name,'UPDATE');\n ");


        jdbc.execute("CREATE TRIGGER HISTORY_DELETE AFTER DELETE  ON country \n" +
                "   referencing OLD ROW AS oldrow for each row\n" +
                "    INSERT INTO country_history (id,country_id,version,code,name,history_type) values(next value for hibernate_sequence,oldrow.id,oldrow.version,oldrow.code, oldrow.name,'DELETE');\n ");



        System.out.println("DB was initialized !");
    }

}
