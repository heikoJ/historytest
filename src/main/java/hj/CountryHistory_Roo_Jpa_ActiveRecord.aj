// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package hj;

import hj.CountryHistory;
import java.util.List;
import javax.persistence.EntityManager;
import javax.persistence.PersistenceContext;

privileged aspect CountryHistory_Roo_Jpa_ActiveRecord {
    
    @PersistenceContext
    transient EntityManager CountryHistory.entityManager;
    
    public static final List<String> CountryHistory.fieldNames4OrderClauseFilter = java.util.Arrays.asList("code", "name", "countryId", "historyType");
    
    public static final EntityManager CountryHistory.entityManager() {
        EntityManager em = new CountryHistory().entityManager;
        if (em == null) throw new IllegalStateException("Entity manager has not been injected (is the Spring Aspects JAR configured as an AJC/AJDT aspects library?)");
        return em;
    }
    
    public static long CountryHistory.countCountryHistorys() {
        return entityManager().createQuery("SELECT COUNT(o) FROM CountryHistory o", Long.class).getSingleResult();
    }
    
    public static List<CountryHistory> CountryHistory.findAllCountryHistorys() {
        return entityManager().createQuery("SELECT o FROM CountryHistory o", CountryHistory.class).getResultList();
    }
    
    public static List<CountryHistory> CountryHistory.findAllCountryHistorys(String sortFieldName, String sortOrder) {
        String jpaQuery = "SELECT o FROM CountryHistory o";
        if (fieldNames4OrderClauseFilter.contains(sortFieldName)) {
            jpaQuery = jpaQuery + " ORDER BY " + sortFieldName;
            if ("ASC".equalsIgnoreCase(sortOrder) || "DESC".equalsIgnoreCase(sortOrder)) {
                jpaQuery = jpaQuery + " " + sortOrder;
            }
        }
        return entityManager().createQuery(jpaQuery, CountryHistory.class).getResultList();
    }
    
    public static CountryHistory CountryHistory.findCountryHistory(Long id) {
        if (id == null) return null;
        return entityManager().find(CountryHistory.class, id);
    }
    
    public static List<CountryHistory> CountryHistory.findCountryHistoryEntries(int firstResult, int maxResults) {
        return entityManager().createQuery("SELECT o FROM CountryHistory o", CountryHistory.class).setFirstResult(firstResult).setMaxResults(maxResults).getResultList();
    }
    
    public static List<CountryHistory> CountryHistory.findCountryHistoryEntries(int firstResult, int maxResults, String sortFieldName, String sortOrder) {
        String jpaQuery = "SELECT o FROM CountryHistory o";
        if (fieldNames4OrderClauseFilter.contains(sortFieldName)) {
            jpaQuery = jpaQuery + " ORDER BY " + sortFieldName;
            if ("ASC".equalsIgnoreCase(sortOrder) || "DESC".equalsIgnoreCase(sortOrder)) {
                jpaQuery = jpaQuery + " " + sortOrder;
            }
        }
        return entityManager().createQuery(jpaQuery, CountryHistory.class).setFirstResult(firstResult).setMaxResults(maxResults).getResultList();
    }
    
}
